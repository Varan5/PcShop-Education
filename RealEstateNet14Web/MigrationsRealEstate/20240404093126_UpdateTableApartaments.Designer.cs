// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealEstateNet14Web.DbStuff;

#nullable disable

namespace RealEstateNet14Web.MigrationsRealEstate
{
    [DbContext(typeof(WebRealEstateDbContext))]
    [Migration("20240404093126_UpdateTableApartaments")]
    partial class UpdateTableApartaments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AlertApartmentOwner", b =>
                {
                    b.Property<int>("NotificatedApartmentOwnersId")
                        .HasColumnType("integer");

                    b.Property<int>("SeenAlertsId")
                        .HasColumnType("integer");

                    b.HasKey("NotificatedApartmentOwnersId", "SeenAlertsId");

                    b.HasIndex("SeenAlertsId");

                    b.ToTable("AlertApartmentOwner");
                });

            modelBuilder.Entity("RealEstateNet14Web.DbStuff.Models.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("RealEstateNet14Web.DbStuff.Models.Apartament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApartmentOwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NumberApartament")
                        .HasColumnType("integer");

                    b.Property<int?>("Size")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentOwnerId");

                    b.ToTable("Apartaments");
                });

            modelBuilder.Entity("RealEstateNet14Web.DbStuff.Models.ApartmentOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("KindOfActivity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApartmentOwners");
                });

            modelBuilder.Entity("AlertApartmentOwner", b =>
                {
                    b.HasOne("RealEstateNet14Web.DbStuff.Models.ApartmentOwner", null)
                        .WithMany()
                        .HasForeignKey("NotificatedApartmentOwnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateNet14Web.DbStuff.Models.Alert", null)
                        .WithMany()
                        .HasForeignKey("SeenAlertsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateNet14Web.DbStuff.Models.Alert", b =>
                {
                    b.HasOne("RealEstateNet14Web.DbStuff.Models.ApartmentOwner", "Creator")
                        .WithMany("CreatedAlerts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("RealEstateNet14Web.DbStuff.Models.Apartament", b =>
                {
                    b.HasOne("RealEstateNet14Web.DbStuff.Models.ApartmentOwner", "ApartmentOwner")
                        .WithMany("Apartaments")
                        .HasForeignKey("ApartmentOwnerId");

                    b.Navigation("ApartmentOwner");
                });

            modelBuilder.Entity("RealEstateNet14Web.DbStuff.Models.ApartmentOwner", b =>
                {
                    b.Navigation("Apartaments");

                    b.Navigation("CreatedAlerts");
                });
#pragma warning restore 612, 618
        }
    }
}
