// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ManagementCompany.DbStuff;

#nullable disable

namespace ManagementCompany.Migrations.ManagmentCompanyDb
{
    [DbContext(typeof(ManagementCompanyDbContext))]
    [Migration("20240120181624_AddExecutorTable")]
    partial class AddExecutorTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExecutorId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ExecutorId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("UserPermission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.UserTask", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExecutorId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ExecutorId");

                    b.ToTable("UserTasks");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.Executor", b =>
                {
                    b.HasBaseType("Net14Web.DbStuff.ManagmentCompany.Models.User");

                    b.HasDiscriminator().HasValue("Executor");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.Project", b =>
                {
                    b.HasOne("Net14Web.DbStuff.ManagmentCompany.Models.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Net14Web.DbStuff.ManagmentCompany.Models.Executor", null)
                        .WithMany("Projects")
                        .HasForeignKey("ExecutorId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.User", b =>
                {
                    b.HasOne("Net14Web.DbStuff.ManagmentCompany.Models.Project", null)
                        .WithMany("Users")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.UserTask", b =>
                {
                    b.HasOne("Net14Web.DbStuff.ManagmentCompany.Models.User", "Author")
                        .WithMany("UserTasks")
                        .HasForeignKey("AuthorId");

                    b.HasOne("Net14Web.DbStuff.ManagmentCompany.Models.Executor", "Executor")
                        .WithMany("ExecutorTasks")
                        .HasForeignKey("ExecutorId");

                    b.Navigation("Author");

                    b.Navigation("Executor");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.Company", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.Project", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.User", b =>
                {
                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Net14Web.DbStuff.ManagmentCompany.Models.Executor", b =>
                {
                    b.Navigation("ExecutorTasks");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
